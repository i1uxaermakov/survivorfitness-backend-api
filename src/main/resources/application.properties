# Database connection details
spring.datasource.url=${SFF_DB_URL}?autoReconnect=true&serverTimezone=UTC
spring.datasource.username=${SFF_DB_USERNAME}
spring.datasource.password=${SFF_DB_PASSWORD}
spring.datasource.driver-class-name=${SFF_DB_DRIVER_CLASS_NAME}
spring.jpa.properties.hibernate.dialect=${SFF_DB_HIBERNATE_DIALECT}

# Select whether to generate the tables based on JPA mappings
# Possible values: create, update, create-drop, validate, none
# https://stackoverflow.com/questions/42135114/how-does-spring-jpa-hibernate-ddl-auto-property-exactly-work-in-spring
spring.jpa.hibernate.ddl-auto=${SFF_DB_DDL_AUTO}

# Display SQL in logs config (uncomment to enable)
#spring.jpa.show-sql = true
#spring.jpa.properties.hibernate.format_sql = true

# Always include JSON error message in the response if there is an error
server.error.include-message=always

# JWT Authentication details
survivorfitness-backend.security.jwt.secret-key=${SFF_JWT_SECRET_KEY}
survivorfitness-backend.security.jwt.issuer=${SFF_JWT_ISSUER}
survivorfitness-backend.security.jwt.subject=${SFF_JWT_SUBJECT}


# Email configuration details
spring.mail.host=${SFF_EMAIL_SMTP_HOST}
spring.mail.port=${SFF_EMAIL_TLS_PORT}
spring.mail.username=${SFF_EMAIL_USERNAME}
spring.mail.password=${SFF_EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.starttls.enable=true


survivorfitness-backend.password-reset-token.expiration-time-in-hours=${SFF_PASSWORD_RESET_EMAIL_EXPIRATION_HOURS}

# Domain name of the server where the application is running
# Used for generation of links (account verification in particular)
survivorfitness-backend.domain-name=${SFF_DOMAIN_NAME:localhost:8080}